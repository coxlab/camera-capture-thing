# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_prosilica_cpp', [dirname(__file__)])
        except ImportError:
            import _prosilica_cpp
            return _prosilica_cpp
        if fp is not None:
            try:
                _mod = imp.load_module('_prosilica_cpp', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _prosilica_cpp = swig_import_helper()
    del swig_import_helper
else:
    import _prosilica_cpp
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _prosilica_cpp.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self): return _prosilica_cpp.SwigPyIterator_value(self)
    def incr(self, n=1): return _prosilica_cpp.SwigPyIterator_incr(self, n)
    def decr(self, n=1): return _prosilica_cpp.SwigPyIterator_decr(self, n)
    def distance(self, *args): return _prosilica_cpp.SwigPyIterator_distance(self, *args)
    def equal(self, *args): return _prosilica_cpp.SwigPyIterator_equal(self, *args)
    def copy(self): return _prosilica_cpp.SwigPyIterator_copy(self)
    def next(self): return _prosilica_cpp.SwigPyIterator_next(self)
    def __next__(self): return _prosilica_cpp.SwigPyIterator___next__(self)
    def previous(self): return _prosilica_cpp.SwigPyIterator_previous(self)
    def advance(self, *args): return _prosilica_cpp.SwigPyIterator_advance(self, *args)
    def __eq__(self, *args): return _prosilica_cpp.SwigPyIterator___eq__(self, *args)
    def __ne__(self, *args): return _prosilica_cpp.SwigPyIterator___ne__(self, *args)
    def __iadd__(self, *args): return _prosilica_cpp.SwigPyIterator___iadd__(self, *args)
    def __isub__(self, *args): return _prosilica_cpp.SwigPyIterator___isub__(self, *args)
    def __add__(self, *args): return _prosilica_cpp.SwigPyIterator___add__(self, *args)
    def __sub__(self, *args): return _prosilica_cpp.SwigPyIterator___sub__(self, *args)
    def __iter__(self): return self
SwigPyIterator_swigregister = _prosilica_cpp.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class vector_pv_caminfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, vector_pv_caminfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, vector_pv_caminfo, name)
    __repr__ = _swig_repr
    def iterator(self): return _prosilica_cpp.vector_pv_caminfo_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _prosilica_cpp.vector_pv_caminfo___nonzero__(self)
    def __bool__(self): return _prosilica_cpp.vector_pv_caminfo___bool__(self)
    def __len__(self): return _prosilica_cpp.vector_pv_caminfo___len__(self)
    def pop(self): return _prosilica_cpp.vector_pv_caminfo_pop(self)
    def __getslice__(self, *args): return _prosilica_cpp.vector_pv_caminfo___getslice__(self, *args)
    def __setslice__(self, *args): return _prosilica_cpp.vector_pv_caminfo___setslice__(self, *args)
    def __delslice__(self, *args): return _prosilica_cpp.vector_pv_caminfo___delslice__(self, *args)
    def __delitem__(self, *args): return _prosilica_cpp.vector_pv_caminfo___delitem__(self, *args)
    def __getitem__(self, *args): return _prosilica_cpp.vector_pv_caminfo___getitem__(self, *args)
    def __setitem__(self, *args): return _prosilica_cpp.vector_pv_caminfo___setitem__(self, *args)
    def append(self, *args): return _prosilica_cpp.vector_pv_caminfo_append(self, *args)
    def empty(self): return _prosilica_cpp.vector_pv_caminfo_empty(self)
    def size(self): return _prosilica_cpp.vector_pv_caminfo_size(self)
    def clear(self): return _prosilica_cpp.vector_pv_caminfo_clear(self)
    def swap(self, *args): return _prosilica_cpp.vector_pv_caminfo_swap(self, *args)
    def get_allocator(self): return _prosilica_cpp.vector_pv_caminfo_get_allocator(self)
    def begin(self): return _prosilica_cpp.vector_pv_caminfo_begin(self)
    def end(self): return _prosilica_cpp.vector_pv_caminfo_end(self)
    def rbegin(self): return _prosilica_cpp.vector_pv_caminfo_rbegin(self)
    def rend(self): return _prosilica_cpp.vector_pv_caminfo_rend(self)
    def pop_back(self): return _prosilica_cpp.vector_pv_caminfo_pop_back(self)
    def erase(self, *args): return _prosilica_cpp.vector_pv_caminfo_erase(self, *args)
    def __init__(self, *args): 
        this = _prosilica_cpp.new_vector_pv_caminfo(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _prosilica_cpp.vector_pv_caminfo_push_back(self, *args)
    def front(self): return _prosilica_cpp.vector_pv_caminfo_front(self)
    def back(self): return _prosilica_cpp.vector_pv_caminfo_back(self)
    def assign(self, *args): return _prosilica_cpp.vector_pv_caminfo_assign(self, *args)
    def resize(self, *args): return _prosilica_cpp.vector_pv_caminfo_resize(self, *args)
    def insert(self, *args): return _prosilica_cpp.vector_pv_caminfo_insert(self, *args)
    def reserve(self, *args): return _prosilica_cpp.vector_pv_caminfo_reserve(self, *args)
    def capacity(self): return _prosilica_cpp.vector_pv_caminfo_capacity(self)
    __swig_destroy__ = _prosilica_cpp.delete_vector_pv_caminfo
    __del__ = lambda self : None;
vector_pv_caminfo_swigregister = _prosilica_cpp.vector_pv_caminfo_swigregister
vector_pv_caminfo_swigregister(vector_pv_caminfo)

PVINFINITE = _prosilica_cpp.PVINFINITE
ePvErrSuccess = _prosilica_cpp.ePvErrSuccess
ePvErrCameraFault = _prosilica_cpp.ePvErrCameraFault
ePvErrInternalFault = _prosilica_cpp.ePvErrInternalFault
ePvErrBadHandle = _prosilica_cpp.ePvErrBadHandle
ePvErrBadParameter = _prosilica_cpp.ePvErrBadParameter
ePvErrBadSequence = _prosilica_cpp.ePvErrBadSequence
ePvErrNotFound = _prosilica_cpp.ePvErrNotFound
ePvErrAccessDenied = _prosilica_cpp.ePvErrAccessDenied
ePvErrUnplugged = _prosilica_cpp.ePvErrUnplugged
ePvErrInvalidSetup = _prosilica_cpp.ePvErrInvalidSetup
ePvErrResources = _prosilica_cpp.ePvErrResources
ePvErrBandwidth = _prosilica_cpp.ePvErrBandwidth
ePvErrQueueFull = _prosilica_cpp.ePvErrQueueFull
ePvErrBufferTooSmall = _prosilica_cpp.ePvErrBufferTooSmall
ePvErrCancelled = _prosilica_cpp.ePvErrCancelled
ePvErrDataLost = _prosilica_cpp.ePvErrDataLost
ePvErrDataMissing = _prosilica_cpp.ePvErrDataMissing
ePvErrTimeout = _prosilica_cpp.ePvErrTimeout
ePvErrOutOfRange = _prosilica_cpp.ePvErrOutOfRange
ePvErrWrongType = _prosilica_cpp.ePvErrWrongType
ePvErrForbidden = _prosilica_cpp.ePvErrForbidden
ePvErrUnavailable = _prosilica_cpp.ePvErrUnavailable
ePvErrFirewall = _prosilica_cpp.ePvErrFirewall
__ePvErr_force_32 = _prosilica_cpp.__ePvErr_force_32
ePvAccessMonitor = _prosilica_cpp.ePvAccessMonitor
ePvAccessMaster = _prosilica_cpp.ePvAccessMaster
__ePvAccess_force_32 = _prosilica_cpp.__ePvAccess_force_32
ePvInterfaceFirewire = _prosilica_cpp.ePvInterfaceFirewire
ePvInterfaceEthernet = _prosilica_cpp.ePvInterfaceEthernet
__ePvInterface_force_32 = _prosilica_cpp.__ePvInterface_force_32
class tPvCameraInfoEx(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvCameraInfoEx, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvCameraInfoEx, name)
    __repr__ = _swig_repr
    __swig_setmethods__["StructVer"] = _prosilica_cpp.tPvCameraInfoEx_StructVer_set
    __swig_getmethods__["StructVer"] = _prosilica_cpp.tPvCameraInfoEx_StructVer_get
    if _newclass:StructVer = _swig_property(_prosilica_cpp.tPvCameraInfoEx_StructVer_get, _prosilica_cpp.tPvCameraInfoEx_StructVer_set)
    __swig_setmethods__["UniqueId"] = _prosilica_cpp.tPvCameraInfoEx_UniqueId_set
    __swig_getmethods__["UniqueId"] = _prosilica_cpp.tPvCameraInfoEx_UniqueId_get
    if _newclass:UniqueId = _swig_property(_prosilica_cpp.tPvCameraInfoEx_UniqueId_get, _prosilica_cpp.tPvCameraInfoEx_UniqueId_set)
    __swig_setmethods__["CameraName"] = _prosilica_cpp.tPvCameraInfoEx_CameraName_set
    __swig_getmethods__["CameraName"] = _prosilica_cpp.tPvCameraInfoEx_CameraName_get
    if _newclass:CameraName = _swig_property(_prosilica_cpp.tPvCameraInfoEx_CameraName_get, _prosilica_cpp.tPvCameraInfoEx_CameraName_set)
    __swig_setmethods__["ModelName"] = _prosilica_cpp.tPvCameraInfoEx_ModelName_set
    __swig_getmethods__["ModelName"] = _prosilica_cpp.tPvCameraInfoEx_ModelName_get
    if _newclass:ModelName = _swig_property(_prosilica_cpp.tPvCameraInfoEx_ModelName_get, _prosilica_cpp.tPvCameraInfoEx_ModelName_set)
    __swig_setmethods__["PartNumber"] = _prosilica_cpp.tPvCameraInfoEx_PartNumber_set
    __swig_getmethods__["PartNumber"] = _prosilica_cpp.tPvCameraInfoEx_PartNumber_get
    if _newclass:PartNumber = _swig_property(_prosilica_cpp.tPvCameraInfoEx_PartNumber_get, _prosilica_cpp.tPvCameraInfoEx_PartNumber_set)
    __swig_setmethods__["SerialNumber"] = _prosilica_cpp.tPvCameraInfoEx_SerialNumber_set
    __swig_getmethods__["SerialNumber"] = _prosilica_cpp.tPvCameraInfoEx_SerialNumber_get
    if _newclass:SerialNumber = _swig_property(_prosilica_cpp.tPvCameraInfoEx_SerialNumber_get, _prosilica_cpp.tPvCameraInfoEx_SerialNumber_set)
    __swig_setmethods__["FirmwareVersion"] = _prosilica_cpp.tPvCameraInfoEx_FirmwareVersion_set
    __swig_getmethods__["FirmwareVersion"] = _prosilica_cpp.tPvCameraInfoEx_FirmwareVersion_get
    if _newclass:FirmwareVersion = _swig_property(_prosilica_cpp.tPvCameraInfoEx_FirmwareVersion_get, _prosilica_cpp.tPvCameraInfoEx_FirmwareVersion_set)
    __swig_setmethods__["PermittedAccess"] = _prosilica_cpp.tPvCameraInfoEx_PermittedAccess_set
    __swig_getmethods__["PermittedAccess"] = _prosilica_cpp.tPvCameraInfoEx_PermittedAccess_get
    if _newclass:PermittedAccess = _swig_property(_prosilica_cpp.tPvCameraInfoEx_PermittedAccess_get, _prosilica_cpp.tPvCameraInfoEx_PermittedAccess_set)
    __swig_setmethods__["InterfaceId"] = _prosilica_cpp.tPvCameraInfoEx_InterfaceId_set
    __swig_getmethods__["InterfaceId"] = _prosilica_cpp.tPvCameraInfoEx_InterfaceId_get
    if _newclass:InterfaceId = _swig_property(_prosilica_cpp.tPvCameraInfoEx_InterfaceId_get, _prosilica_cpp.tPvCameraInfoEx_InterfaceId_set)
    __swig_setmethods__["InterfaceType"] = _prosilica_cpp.tPvCameraInfoEx_InterfaceType_set
    __swig_getmethods__["InterfaceType"] = _prosilica_cpp.tPvCameraInfoEx_InterfaceType_get
    if _newclass:InterfaceType = _swig_property(_prosilica_cpp.tPvCameraInfoEx_InterfaceType_get, _prosilica_cpp.tPvCameraInfoEx_InterfaceType_set)
    def __init__(self): 
        this = _prosilica_cpp.new_tPvCameraInfoEx()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvCameraInfoEx
    __del__ = lambda self : None;
tPvCameraInfoEx_swigregister = _prosilica_cpp.tPvCameraInfoEx_swigregister
tPvCameraInfoEx_swigregister(tPvCameraInfoEx)

class tPvCameraInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvCameraInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvCameraInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UniqueId"] = _prosilica_cpp.tPvCameraInfo_UniqueId_set
    __swig_getmethods__["UniqueId"] = _prosilica_cpp.tPvCameraInfo_UniqueId_get
    if _newclass:UniqueId = _swig_property(_prosilica_cpp.tPvCameraInfo_UniqueId_get, _prosilica_cpp.tPvCameraInfo_UniqueId_set)
    __swig_setmethods__["SerialString"] = _prosilica_cpp.tPvCameraInfo_SerialString_set
    __swig_getmethods__["SerialString"] = _prosilica_cpp.tPvCameraInfo_SerialString_get
    if _newclass:SerialString = _swig_property(_prosilica_cpp.tPvCameraInfo_SerialString_get, _prosilica_cpp.tPvCameraInfo_SerialString_set)
    __swig_setmethods__["PartNumber"] = _prosilica_cpp.tPvCameraInfo_PartNumber_set
    __swig_getmethods__["PartNumber"] = _prosilica_cpp.tPvCameraInfo_PartNumber_get
    if _newclass:PartNumber = _swig_property(_prosilica_cpp.tPvCameraInfo_PartNumber_get, _prosilica_cpp.tPvCameraInfo_PartNumber_set)
    __swig_setmethods__["PartVersion"] = _prosilica_cpp.tPvCameraInfo_PartVersion_set
    __swig_getmethods__["PartVersion"] = _prosilica_cpp.tPvCameraInfo_PartVersion_get
    if _newclass:PartVersion = _swig_property(_prosilica_cpp.tPvCameraInfo_PartVersion_get, _prosilica_cpp.tPvCameraInfo_PartVersion_set)
    __swig_setmethods__["PermittedAccess"] = _prosilica_cpp.tPvCameraInfo_PermittedAccess_set
    __swig_getmethods__["PermittedAccess"] = _prosilica_cpp.tPvCameraInfo_PermittedAccess_get
    if _newclass:PermittedAccess = _swig_property(_prosilica_cpp.tPvCameraInfo_PermittedAccess_get, _prosilica_cpp.tPvCameraInfo_PermittedAccess_set)
    __swig_setmethods__["InterfaceId"] = _prosilica_cpp.tPvCameraInfo_InterfaceId_set
    __swig_getmethods__["InterfaceId"] = _prosilica_cpp.tPvCameraInfo_InterfaceId_get
    if _newclass:InterfaceId = _swig_property(_prosilica_cpp.tPvCameraInfo_InterfaceId_get, _prosilica_cpp.tPvCameraInfo_InterfaceId_set)
    __swig_setmethods__["InterfaceType"] = _prosilica_cpp.tPvCameraInfo_InterfaceType_set
    __swig_getmethods__["InterfaceType"] = _prosilica_cpp.tPvCameraInfo_InterfaceType_get
    if _newclass:InterfaceType = _swig_property(_prosilica_cpp.tPvCameraInfo_InterfaceType_get, _prosilica_cpp.tPvCameraInfo_InterfaceType_set)
    __swig_setmethods__["DisplayName"] = _prosilica_cpp.tPvCameraInfo_DisplayName_set
    __swig_getmethods__["DisplayName"] = _prosilica_cpp.tPvCameraInfo_DisplayName_get
    if _newclass:DisplayName = _swig_property(_prosilica_cpp.tPvCameraInfo_DisplayName_get, _prosilica_cpp.tPvCameraInfo_DisplayName_set)
    __swig_setmethods__["_reserved"] = _prosilica_cpp.tPvCameraInfo__reserved_set
    __swig_getmethods__["_reserved"] = _prosilica_cpp.tPvCameraInfo__reserved_get
    if _newclass:_reserved = _swig_property(_prosilica_cpp.tPvCameraInfo__reserved_get, _prosilica_cpp.tPvCameraInfo__reserved_set)
    def __init__(self): 
        this = _prosilica_cpp.new_tPvCameraInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvCameraInfo
    __del__ = lambda self : None;
tPvCameraInfo_swigregister = _prosilica_cpp.tPvCameraInfo_swigregister
tPvCameraInfo_swigregister(tPvCameraInfo)

ePvIpConfigPersistent = _prosilica_cpp.ePvIpConfigPersistent
ePvIpConfigDhcp = _prosilica_cpp.ePvIpConfigDhcp
ePvIpConfigAutoIp = _prosilica_cpp.ePvIpConfigAutoIp
__ePvIpConfig_force_32 = _prosilica_cpp.__ePvIpConfig_force_32
class tPvIpSettings(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvIpSettings, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvIpSettings, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ConfigMode"] = _prosilica_cpp.tPvIpSettings_ConfigMode_set
    __swig_getmethods__["ConfigMode"] = _prosilica_cpp.tPvIpSettings_ConfigMode_get
    if _newclass:ConfigMode = _swig_property(_prosilica_cpp.tPvIpSettings_ConfigMode_get, _prosilica_cpp.tPvIpSettings_ConfigMode_set)
    __swig_setmethods__["ConfigModeSupport"] = _prosilica_cpp.tPvIpSettings_ConfigModeSupport_set
    __swig_getmethods__["ConfigModeSupport"] = _prosilica_cpp.tPvIpSettings_ConfigModeSupport_get
    if _newclass:ConfigModeSupport = _swig_property(_prosilica_cpp.tPvIpSettings_ConfigModeSupport_get, _prosilica_cpp.tPvIpSettings_ConfigModeSupport_set)
    __swig_setmethods__["CurrentIpAddress"] = _prosilica_cpp.tPvIpSettings_CurrentIpAddress_set
    __swig_getmethods__["CurrentIpAddress"] = _prosilica_cpp.tPvIpSettings_CurrentIpAddress_get
    if _newclass:CurrentIpAddress = _swig_property(_prosilica_cpp.tPvIpSettings_CurrentIpAddress_get, _prosilica_cpp.tPvIpSettings_CurrentIpAddress_set)
    __swig_setmethods__["CurrentIpSubnet"] = _prosilica_cpp.tPvIpSettings_CurrentIpSubnet_set
    __swig_getmethods__["CurrentIpSubnet"] = _prosilica_cpp.tPvIpSettings_CurrentIpSubnet_get
    if _newclass:CurrentIpSubnet = _swig_property(_prosilica_cpp.tPvIpSettings_CurrentIpSubnet_get, _prosilica_cpp.tPvIpSettings_CurrentIpSubnet_set)
    __swig_setmethods__["CurrentIpGateway"] = _prosilica_cpp.tPvIpSettings_CurrentIpGateway_set
    __swig_getmethods__["CurrentIpGateway"] = _prosilica_cpp.tPvIpSettings_CurrentIpGateway_get
    if _newclass:CurrentIpGateway = _swig_property(_prosilica_cpp.tPvIpSettings_CurrentIpGateway_get, _prosilica_cpp.tPvIpSettings_CurrentIpGateway_set)
    __swig_setmethods__["PersistentIpAddr"] = _prosilica_cpp.tPvIpSettings_PersistentIpAddr_set
    __swig_getmethods__["PersistentIpAddr"] = _prosilica_cpp.tPvIpSettings_PersistentIpAddr_get
    if _newclass:PersistentIpAddr = _swig_property(_prosilica_cpp.tPvIpSettings_PersistentIpAddr_get, _prosilica_cpp.tPvIpSettings_PersistentIpAddr_set)
    __swig_setmethods__["PersistentIpSubnet"] = _prosilica_cpp.tPvIpSettings_PersistentIpSubnet_set
    __swig_getmethods__["PersistentIpSubnet"] = _prosilica_cpp.tPvIpSettings_PersistentIpSubnet_get
    if _newclass:PersistentIpSubnet = _swig_property(_prosilica_cpp.tPvIpSettings_PersistentIpSubnet_get, _prosilica_cpp.tPvIpSettings_PersistentIpSubnet_set)
    __swig_setmethods__["PersistentIpGateway"] = _prosilica_cpp.tPvIpSettings_PersistentIpGateway_set
    __swig_getmethods__["PersistentIpGateway"] = _prosilica_cpp.tPvIpSettings_PersistentIpGateway_get
    if _newclass:PersistentIpGateway = _swig_property(_prosilica_cpp.tPvIpSettings_PersistentIpGateway_get, _prosilica_cpp.tPvIpSettings_PersistentIpGateway_set)
    __swig_setmethods__["_reserved1"] = _prosilica_cpp.tPvIpSettings__reserved1_set
    __swig_getmethods__["_reserved1"] = _prosilica_cpp.tPvIpSettings__reserved1_get
    if _newclass:_reserved1 = _swig_property(_prosilica_cpp.tPvIpSettings__reserved1_get, _prosilica_cpp.tPvIpSettings__reserved1_set)
    def __init__(self): 
        this = _prosilica_cpp.new_tPvIpSettings()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvIpSettings
    __del__ = lambda self : None;
tPvIpSettings_swigregister = _prosilica_cpp.tPvIpSettings_swigregister
tPvIpSettings_swigregister(tPvIpSettings)

ePvLinkAdd = _prosilica_cpp.ePvLinkAdd
ePvLinkRemove = _prosilica_cpp.ePvLinkRemove
_ePvLink_reserved1 = _prosilica_cpp._ePvLink_reserved1
__ePvLink_force_32 = _prosilica_cpp.__ePvLink_force_32
class tPvCameraEvent(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvCameraEvent, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvCameraEvent, name)
    __repr__ = _swig_repr
    __swig_setmethods__["EventId"] = _prosilica_cpp.tPvCameraEvent_EventId_set
    __swig_getmethods__["EventId"] = _prosilica_cpp.tPvCameraEvent_EventId_get
    if _newclass:EventId = _swig_property(_prosilica_cpp.tPvCameraEvent_EventId_get, _prosilica_cpp.tPvCameraEvent_EventId_set)
    __swig_setmethods__["TimestampLo"] = _prosilica_cpp.tPvCameraEvent_TimestampLo_set
    __swig_getmethods__["TimestampLo"] = _prosilica_cpp.tPvCameraEvent_TimestampLo_get
    if _newclass:TimestampLo = _swig_property(_prosilica_cpp.tPvCameraEvent_TimestampLo_get, _prosilica_cpp.tPvCameraEvent_TimestampLo_set)
    __swig_setmethods__["TimestampHi"] = _prosilica_cpp.tPvCameraEvent_TimestampHi_set
    __swig_getmethods__["TimestampHi"] = _prosilica_cpp.tPvCameraEvent_TimestampHi_get
    if _newclass:TimestampHi = _swig_property(_prosilica_cpp.tPvCameraEvent_TimestampHi_get, _prosilica_cpp.tPvCameraEvent_TimestampHi_set)
    __swig_setmethods__["Data"] = _prosilica_cpp.tPvCameraEvent_Data_set
    __swig_getmethods__["Data"] = _prosilica_cpp.tPvCameraEvent_Data_get
    if _newclass:Data = _swig_property(_prosilica_cpp.tPvCameraEvent_Data_get, _prosilica_cpp.tPvCameraEvent_Data_set)
    __swig_setmethods__["ExtraData"] = _prosilica_cpp.tPvCameraEvent_ExtraData_set
    __swig_getmethods__["ExtraData"] = _prosilica_cpp.tPvCameraEvent_ExtraData_get
    if _newclass:ExtraData = _swig_property(_prosilica_cpp.tPvCameraEvent_ExtraData_get, _prosilica_cpp.tPvCameraEvent_ExtraData_set)
    def __init__(self): 
        this = _prosilica_cpp.new_tPvCameraEvent()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvCameraEvent
    __del__ = lambda self : None;
tPvCameraEvent_swigregister = _prosilica_cpp.tPvCameraEvent_swigregister
tPvCameraEvent_swigregister(tPvCameraEvent)

ePvFmtMono8 = _prosilica_cpp.ePvFmtMono8
ePvFmtMono16 = _prosilica_cpp.ePvFmtMono16
ePvFmtBayer8 = _prosilica_cpp.ePvFmtBayer8
ePvFmtBayer16 = _prosilica_cpp.ePvFmtBayer16
ePvFmtRgb24 = _prosilica_cpp.ePvFmtRgb24
ePvFmtRgb48 = _prosilica_cpp.ePvFmtRgb48
ePvFmtYuv411 = _prosilica_cpp.ePvFmtYuv411
ePvFmtYuv422 = _prosilica_cpp.ePvFmtYuv422
ePvFmtYuv444 = _prosilica_cpp.ePvFmtYuv444
ePvFmtBgr24 = _prosilica_cpp.ePvFmtBgr24
ePvFmtRgba32 = _prosilica_cpp.ePvFmtRgba32
ePvFmtBgra32 = _prosilica_cpp.ePvFmtBgra32
ePvFmtMono12Packed = _prosilica_cpp.ePvFmtMono12Packed
ePvFmtBayer12Packed = _prosilica_cpp.ePvFmtBayer12Packed
__ePvFmt_force_32 = _prosilica_cpp.__ePvFmt_force_32
ePvBayerRGGB = _prosilica_cpp.ePvBayerRGGB
ePvBayerGBRG = _prosilica_cpp.ePvBayerGBRG
ePvBayerGRBG = _prosilica_cpp.ePvBayerGRBG
ePvBayerBGGR = _prosilica_cpp.ePvBayerBGGR
__ePvBayer_force_32 = _prosilica_cpp.__ePvBayer_force_32
class tPvFrame(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvFrame, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvFrame, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ImageBuffer"] = _prosilica_cpp.tPvFrame_ImageBuffer_set
    __swig_getmethods__["ImageBuffer"] = _prosilica_cpp.tPvFrame_ImageBuffer_get
    if _newclass:ImageBuffer = _swig_property(_prosilica_cpp.tPvFrame_ImageBuffer_get, _prosilica_cpp.tPvFrame_ImageBuffer_set)
    __swig_setmethods__["ImageBufferSize"] = _prosilica_cpp.tPvFrame_ImageBufferSize_set
    __swig_getmethods__["ImageBufferSize"] = _prosilica_cpp.tPvFrame_ImageBufferSize_get
    if _newclass:ImageBufferSize = _swig_property(_prosilica_cpp.tPvFrame_ImageBufferSize_get, _prosilica_cpp.tPvFrame_ImageBufferSize_set)
    __swig_setmethods__["AncillaryBuffer"] = _prosilica_cpp.tPvFrame_AncillaryBuffer_set
    __swig_getmethods__["AncillaryBuffer"] = _prosilica_cpp.tPvFrame_AncillaryBuffer_get
    if _newclass:AncillaryBuffer = _swig_property(_prosilica_cpp.tPvFrame_AncillaryBuffer_get, _prosilica_cpp.tPvFrame_AncillaryBuffer_set)
    __swig_setmethods__["AncillaryBufferSize"] = _prosilica_cpp.tPvFrame_AncillaryBufferSize_set
    __swig_getmethods__["AncillaryBufferSize"] = _prosilica_cpp.tPvFrame_AncillaryBufferSize_get
    if _newclass:AncillaryBufferSize = _swig_property(_prosilica_cpp.tPvFrame_AncillaryBufferSize_get, _prosilica_cpp.tPvFrame_AncillaryBufferSize_set)
    __swig_setmethods__["Context"] = _prosilica_cpp.tPvFrame_Context_set
    __swig_getmethods__["Context"] = _prosilica_cpp.tPvFrame_Context_get
    if _newclass:Context = _swig_property(_prosilica_cpp.tPvFrame_Context_get, _prosilica_cpp.tPvFrame_Context_set)
    __swig_setmethods__["_reserved1"] = _prosilica_cpp.tPvFrame__reserved1_set
    __swig_getmethods__["_reserved1"] = _prosilica_cpp.tPvFrame__reserved1_get
    if _newclass:_reserved1 = _swig_property(_prosilica_cpp.tPvFrame__reserved1_get, _prosilica_cpp.tPvFrame__reserved1_set)
    __swig_setmethods__["Status"] = _prosilica_cpp.tPvFrame_Status_set
    __swig_getmethods__["Status"] = _prosilica_cpp.tPvFrame_Status_get
    if _newclass:Status = _swig_property(_prosilica_cpp.tPvFrame_Status_get, _prosilica_cpp.tPvFrame_Status_set)
    __swig_setmethods__["ImageSize"] = _prosilica_cpp.tPvFrame_ImageSize_set
    __swig_getmethods__["ImageSize"] = _prosilica_cpp.tPvFrame_ImageSize_get
    if _newclass:ImageSize = _swig_property(_prosilica_cpp.tPvFrame_ImageSize_get, _prosilica_cpp.tPvFrame_ImageSize_set)
    __swig_setmethods__["AncillarySize"] = _prosilica_cpp.tPvFrame_AncillarySize_set
    __swig_getmethods__["AncillarySize"] = _prosilica_cpp.tPvFrame_AncillarySize_get
    if _newclass:AncillarySize = _swig_property(_prosilica_cpp.tPvFrame_AncillarySize_get, _prosilica_cpp.tPvFrame_AncillarySize_set)
    __swig_setmethods__["Width"] = _prosilica_cpp.tPvFrame_Width_set
    __swig_getmethods__["Width"] = _prosilica_cpp.tPvFrame_Width_get
    if _newclass:Width = _swig_property(_prosilica_cpp.tPvFrame_Width_get, _prosilica_cpp.tPvFrame_Width_set)
    __swig_setmethods__["Height"] = _prosilica_cpp.tPvFrame_Height_set
    __swig_getmethods__["Height"] = _prosilica_cpp.tPvFrame_Height_get
    if _newclass:Height = _swig_property(_prosilica_cpp.tPvFrame_Height_get, _prosilica_cpp.tPvFrame_Height_set)
    __swig_setmethods__["RegionX"] = _prosilica_cpp.tPvFrame_RegionX_set
    __swig_getmethods__["RegionX"] = _prosilica_cpp.tPvFrame_RegionX_get
    if _newclass:RegionX = _swig_property(_prosilica_cpp.tPvFrame_RegionX_get, _prosilica_cpp.tPvFrame_RegionX_set)
    __swig_setmethods__["RegionY"] = _prosilica_cpp.tPvFrame_RegionY_set
    __swig_getmethods__["RegionY"] = _prosilica_cpp.tPvFrame_RegionY_get
    if _newclass:RegionY = _swig_property(_prosilica_cpp.tPvFrame_RegionY_get, _prosilica_cpp.tPvFrame_RegionY_set)
    __swig_setmethods__["Format"] = _prosilica_cpp.tPvFrame_Format_set
    __swig_getmethods__["Format"] = _prosilica_cpp.tPvFrame_Format_get
    if _newclass:Format = _swig_property(_prosilica_cpp.tPvFrame_Format_get, _prosilica_cpp.tPvFrame_Format_set)
    __swig_setmethods__["BitDepth"] = _prosilica_cpp.tPvFrame_BitDepth_set
    __swig_getmethods__["BitDepth"] = _prosilica_cpp.tPvFrame_BitDepth_get
    if _newclass:BitDepth = _swig_property(_prosilica_cpp.tPvFrame_BitDepth_get, _prosilica_cpp.tPvFrame_BitDepth_set)
    __swig_setmethods__["BayerPattern"] = _prosilica_cpp.tPvFrame_BayerPattern_set
    __swig_getmethods__["BayerPattern"] = _prosilica_cpp.tPvFrame_BayerPattern_get
    if _newclass:BayerPattern = _swig_property(_prosilica_cpp.tPvFrame_BayerPattern_get, _prosilica_cpp.tPvFrame_BayerPattern_set)
    __swig_setmethods__["FrameCount"] = _prosilica_cpp.tPvFrame_FrameCount_set
    __swig_getmethods__["FrameCount"] = _prosilica_cpp.tPvFrame_FrameCount_get
    if _newclass:FrameCount = _swig_property(_prosilica_cpp.tPvFrame_FrameCount_get, _prosilica_cpp.tPvFrame_FrameCount_set)
    __swig_setmethods__["TimestampLo"] = _prosilica_cpp.tPvFrame_TimestampLo_set
    __swig_getmethods__["TimestampLo"] = _prosilica_cpp.tPvFrame_TimestampLo_get
    if _newclass:TimestampLo = _swig_property(_prosilica_cpp.tPvFrame_TimestampLo_get, _prosilica_cpp.tPvFrame_TimestampLo_set)
    __swig_setmethods__["TimestampHi"] = _prosilica_cpp.tPvFrame_TimestampHi_set
    __swig_getmethods__["TimestampHi"] = _prosilica_cpp.tPvFrame_TimestampHi_get
    if _newclass:TimestampHi = _swig_property(_prosilica_cpp.tPvFrame_TimestampHi_get, _prosilica_cpp.tPvFrame_TimestampHi_set)
    __swig_setmethods__["_reserved2"] = _prosilica_cpp.tPvFrame__reserved2_set
    __swig_getmethods__["_reserved2"] = _prosilica_cpp.tPvFrame__reserved2_get
    if _newclass:_reserved2 = _swig_property(_prosilica_cpp.tPvFrame__reserved2_get, _prosilica_cpp.tPvFrame__reserved2_set)
    def __get_array_struct(self): return _prosilica_cpp.tPvFrame___get_array_struct(self)
    def __get_timestamp(self): return _prosilica_cpp.tPvFrame___get_timestamp(self)
    __array_struct__ = property(__get_array_struct, doc="Array Protocol")
    timestamp = property(__get_timestamp)

    def __init__(self): 
        this = _prosilica_cpp.new_tPvFrame()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvFrame
    __del__ = lambda self : None;
tPvFrame_swigregister = _prosilica_cpp.tPvFrame_swigregister
tPvFrame_swigregister(tPvFrame)

ePvDatatypeUnknown = _prosilica_cpp.ePvDatatypeUnknown
ePvDatatypeCommand = _prosilica_cpp.ePvDatatypeCommand
ePvDatatypeRaw = _prosilica_cpp.ePvDatatypeRaw
ePvDatatypeString = _prosilica_cpp.ePvDatatypeString
ePvDatatypeEnum = _prosilica_cpp.ePvDatatypeEnum
ePvDatatypeUint32 = _prosilica_cpp.ePvDatatypeUint32
ePvDatatypeFloat32 = _prosilica_cpp.ePvDatatypeFloat32
ePvDatatypeInt64 = _prosilica_cpp.ePvDatatypeInt64
ePvDatatypeBoolean = _prosilica_cpp.ePvDatatypeBoolean
__ePvDatatypeforce_32 = _prosilica_cpp.__ePvDatatypeforce_32
ePvFlagRead = _prosilica_cpp.ePvFlagRead
ePvFlagWrite = _prosilica_cpp.ePvFlagWrite
ePvFlagVolatile = _prosilica_cpp.ePvFlagVolatile
ePvFlagConst = _prosilica_cpp.ePvFlagConst
__ePvFlag_force_32 = _prosilica_cpp.__ePvFlag_force_32
class tPvAttributeInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tPvAttributeInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tPvAttributeInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Datatype"] = _prosilica_cpp.tPvAttributeInfo_Datatype_set
    __swig_getmethods__["Datatype"] = _prosilica_cpp.tPvAttributeInfo_Datatype_get
    if _newclass:Datatype = _swig_property(_prosilica_cpp.tPvAttributeInfo_Datatype_get, _prosilica_cpp.tPvAttributeInfo_Datatype_set)
    __swig_setmethods__["Flags"] = _prosilica_cpp.tPvAttributeInfo_Flags_set
    __swig_getmethods__["Flags"] = _prosilica_cpp.tPvAttributeInfo_Flags_get
    if _newclass:Flags = _swig_property(_prosilica_cpp.tPvAttributeInfo_Flags_get, _prosilica_cpp.tPvAttributeInfo_Flags_set)
    __swig_setmethods__["Category"] = _prosilica_cpp.tPvAttributeInfo_Category_set
    __swig_getmethods__["Category"] = _prosilica_cpp.tPvAttributeInfo_Category_get
    if _newclass:Category = _swig_property(_prosilica_cpp.tPvAttributeInfo_Category_get, _prosilica_cpp.tPvAttributeInfo_Category_set)
    __swig_setmethods__["Impact"] = _prosilica_cpp.tPvAttributeInfo_Impact_set
    __swig_getmethods__["Impact"] = _prosilica_cpp.tPvAttributeInfo_Impact_get
    if _newclass:Impact = _swig_property(_prosilica_cpp.tPvAttributeInfo_Impact_get, _prosilica_cpp.tPvAttributeInfo_Impact_set)
    __swig_setmethods__["_reserved"] = _prosilica_cpp.tPvAttributeInfo__reserved_set
    __swig_getmethods__["_reserved"] = _prosilica_cpp.tPvAttributeInfo__reserved_get
    if _newclass:_reserved = _swig_property(_prosilica_cpp.tPvAttributeInfo__reserved_get, _prosilica_cpp.tPvAttributeInfo__reserved_set)
    def __init__(self): 
        this = _prosilica_cpp.new_tPvAttributeInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_tPvAttributeInfo
    __del__ = lambda self : None;
tPvAttributeInfo_swigregister = _prosilica_cpp.tPvAttributeInfo_swigregister
tPvAttributeInfo_swigregister(tPvAttributeInfo)


def PvVersion(*args):
  return _prosilica_cpp.PvVersion(*args)
PvVersion = _prosilica_cpp.PvVersion

def PvInitialize():
  return _prosilica_cpp.PvInitialize()
PvInitialize = _prosilica_cpp.PvInitialize

def PvInitializeNoDiscovery():
  return _prosilica_cpp.PvInitializeNoDiscovery()
PvInitializeNoDiscovery = _prosilica_cpp.PvInitializeNoDiscovery

def PvUnInitialize():
  return _prosilica_cpp.PvUnInitialize()
PvUnInitialize = _prosilica_cpp.PvUnInitialize

def PvLinkCallbackRegister(*args):
  return _prosilica_cpp.PvLinkCallbackRegister(*args)
PvLinkCallbackRegister = _prosilica_cpp.PvLinkCallbackRegister

def PvLinkCallbackUnRegister(*args):
  return _prosilica_cpp.PvLinkCallbackUnRegister(*args)
PvLinkCallbackUnRegister = _prosilica_cpp.PvLinkCallbackUnRegister

def PvCameraListEx(*args):
  return _prosilica_cpp.PvCameraListEx(*args)
PvCameraListEx = _prosilica_cpp.PvCameraListEx

def PvCameraList(*args):
  return _prosilica_cpp.PvCameraList(*args)
PvCameraList = _prosilica_cpp.PvCameraList

def PvCameraCount():
  return _prosilica_cpp.PvCameraCount()
PvCameraCount = _prosilica_cpp.PvCameraCount

def PvCameraInfoEx(*args):
  return _prosilica_cpp.PvCameraInfoEx(*args)
PvCameraInfoEx = _prosilica_cpp.PvCameraInfoEx

def PvCameraInfo(*args):
  return _prosilica_cpp.PvCameraInfo(*args)
PvCameraInfo = _prosilica_cpp.PvCameraInfo

def PvCameraInfoByAddrEx(*args):
  return _prosilica_cpp.PvCameraInfoByAddrEx(*args)
PvCameraInfoByAddrEx = _prosilica_cpp.PvCameraInfoByAddrEx

def PvCameraInfoByAddr(*args):
  return _prosilica_cpp.PvCameraInfoByAddr(*args)
PvCameraInfoByAddr = _prosilica_cpp.PvCameraInfoByAddr

def PvCameraListUnreachableEx(*args):
  return _prosilica_cpp.PvCameraListUnreachableEx(*args)
PvCameraListUnreachableEx = _prosilica_cpp.PvCameraListUnreachableEx

def PvCameraListUnreachable(*args):
  return _prosilica_cpp.PvCameraListUnreachable(*args)
PvCameraListUnreachable = _prosilica_cpp.PvCameraListUnreachable

def PvCameraOpen(*args):
  return _prosilica_cpp.PvCameraOpen(*args)
PvCameraOpen = _prosilica_cpp.PvCameraOpen

def PvCameraOpenByAddr(*args):
  return _prosilica_cpp.PvCameraOpenByAddr(*args)
PvCameraOpenByAddr = _prosilica_cpp.PvCameraOpenByAddr

def PvCameraClose(*args):
  return _prosilica_cpp.PvCameraClose(*args)
PvCameraClose = _prosilica_cpp.PvCameraClose

def PvCameraIpSettingsGet(*args):
  return _prosilica_cpp.PvCameraIpSettingsGet(*args)
PvCameraIpSettingsGet = _prosilica_cpp.PvCameraIpSettingsGet

def PvCameraIpSettingsChange(*args):
  return _prosilica_cpp.PvCameraIpSettingsChange(*args)
PvCameraIpSettingsChange = _prosilica_cpp.PvCameraIpSettingsChange

def PvCaptureStart(*args):
  return _prosilica_cpp.PvCaptureStart(*args)
PvCaptureStart = _prosilica_cpp.PvCaptureStart

def PvCaptureEnd(*args):
  return _prosilica_cpp.PvCaptureEnd(*args)
PvCaptureEnd = _prosilica_cpp.PvCaptureEnd

def PvCaptureQuery(*args):
  return _prosilica_cpp.PvCaptureQuery(*args)
PvCaptureQuery = _prosilica_cpp.PvCaptureQuery

def PvCaptureAdjustPacketSize(*args):
  return _prosilica_cpp.PvCaptureAdjustPacketSize(*args)
PvCaptureAdjustPacketSize = _prosilica_cpp.PvCaptureAdjustPacketSize

def PvCaptureQueueFrame(*args):
  return _prosilica_cpp.PvCaptureQueueFrame(*args)
PvCaptureQueueFrame = _prosilica_cpp.PvCaptureQueueFrame

def PvCaptureQueueClear(*args):
  return _prosilica_cpp.PvCaptureQueueClear(*args)
PvCaptureQueueClear = _prosilica_cpp.PvCaptureQueueClear

def PvCaptureWaitForFrameDone(*args):
  return _prosilica_cpp.PvCaptureWaitForFrameDone(*args)
PvCaptureWaitForFrameDone = _prosilica_cpp.PvCaptureWaitForFrameDone

def PvAttrList(*args):
  return _prosilica_cpp.PvAttrList(*args)
PvAttrList = _prosilica_cpp.PvAttrList

def PvAttrInfo(*args):
  return _prosilica_cpp.PvAttrInfo(*args)
PvAttrInfo = _prosilica_cpp.PvAttrInfo

def PvAttrExists(*args):
  return _prosilica_cpp.PvAttrExists(*args)
PvAttrExists = _prosilica_cpp.PvAttrExists

def PvAttrIsAvailable(*args):
  return _prosilica_cpp.PvAttrIsAvailable(*args)
PvAttrIsAvailable = _prosilica_cpp.PvAttrIsAvailable

def PvAttrIsValid(*args):
  return _prosilica_cpp.PvAttrIsValid(*args)
PvAttrIsValid = _prosilica_cpp.PvAttrIsValid

def PvAttrRangeEnum(*args):
  return _prosilica_cpp.PvAttrRangeEnum(*args)
PvAttrRangeEnum = _prosilica_cpp.PvAttrRangeEnum

def PvAttrRangeUint32(*args):
  return _prosilica_cpp.PvAttrRangeUint32(*args)
PvAttrRangeUint32 = _prosilica_cpp.PvAttrRangeUint32

def PvAttrRangeFloat32(*args):
  return _prosilica_cpp.PvAttrRangeFloat32(*args)
PvAttrRangeFloat32 = _prosilica_cpp.PvAttrRangeFloat32

def PvAttrRangeInt64(*args):
  return _prosilica_cpp.PvAttrRangeInt64(*args)
PvAttrRangeInt64 = _prosilica_cpp.PvAttrRangeInt64

def PvCommandRun(*args):
  return _prosilica_cpp.PvCommandRun(*args)
PvCommandRun = _prosilica_cpp.PvCommandRun

def PvAttrStringGet(*args):
  return _prosilica_cpp.PvAttrStringGet(*args)
PvAttrStringGet = _prosilica_cpp.PvAttrStringGet

def PvAttrStringSet(*args):
  return _prosilica_cpp.PvAttrStringSet(*args)
PvAttrStringSet = _prosilica_cpp.PvAttrStringSet

def PvAttrEnumGet(*args):
  return _prosilica_cpp.PvAttrEnumGet(*args)
PvAttrEnumGet = _prosilica_cpp.PvAttrEnumGet

def PvAttrEnumSet(*args):
  return _prosilica_cpp.PvAttrEnumSet(*args)
PvAttrEnumSet = _prosilica_cpp.PvAttrEnumSet

def PvAttrUint32Get(*args):
  return _prosilica_cpp.PvAttrUint32Get(*args)
PvAttrUint32Get = _prosilica_cpp.PvAttrUint32Get

def PvAttrUint32Set(*args):
  return _prosilica_cpp.PvAttrUint32Set(*args)
PvAttrUint32Set = _prosilica_cpp.PvAttrUint32Set

def PvAttrFloat32Get(*args):
  return _prosilica_cpp.PvAttrFloat32Get(*args)
PvAttrFloat32Get = _prosilica_cpp.PvAttrFloat32Get

def PvAttrFloat32Set(*args):
  return _prosilica_cpp.PvAttrFloat32Set(*args)
PvAttrFloat32Set = _prosilica_cpp.PvAttrFloat32Set

def PvAttrInt64Get(*args):
  return _prosilica_cpp.PvAttrInt64Get(*args)
PvAttrInt64Get = _prosilica_cpp.PvAttrInt64Get

def PvAttrInt64Set(*args):
  return _prosilica_cpp.PvAttrInt64Set(*args)
PvAttrInt64Set = _prosilica_cpp.PvAttrInt64Set

def PvAttrBooleanGet(*args):
  return _prosilica_cpp.PvAttrBooleanGet(*args)
PvAttrBooleanGet = _prosilica_cpp.PvAttrBooleanGet

def PvAttrBooleanSet(*args):
  return _prosilica_cpp.PvAttrBooleanSet(*args)
PvAttrBooleanSet = _prosilica_cpp.PvAttrBooleanSet

def PvCameraEventCallbackRegister(*args):
  return _prosilica_cpp.PvCameraEventCallbackRegister(*args)
PvCameraEventCallbackRegister = _prosilica_cpp.PvCameraEventCallbackRegister

def PvCameraEventCallbackUnRegister(*args):
  return _prosilica_cpp.PvCameraEventCallbackUnRegister(*args)
PvCameraEventCallbackUnRegister = _prosilica_cpp.PvCameraEventCallbackUnRegister

def PvUtilityColorInterpolate(*args):
  return _prosilica_cpp.PvUtilityColorInterpolate(*args)
PvUtilityColorInterpolate = _prosilica_cpp.PvUtilityColorInterpolate
FRAME_MULTI_BUFFER_SIZE = _prosilica_cpp.FRAME_MULTI_BUFFER_SIZE
HIGH_WATER_MARK = _prosilica_cpp.HIGH_WATER_MARK
FRAME_PENDING = _prosilica_cpp.FRAME_PENDING
FRAME_READY = _prosilica_cpp.FRAME_READY
FRAME_LOCKED = _prosilica_cpp.FRAME_LOCKED
FRAME_DONE = _prosilica_cpp.FRAME_DONE
FRAME_CONTEXT_CAMERA = _prosilica_cpp.FRAME_CONTEXT_CAMERA
FRAME_CONTEXT_INDEX = _prosilica_cpp.FRAME_CONTEXT_INDEX
FRAME_CONTEXT_SOBEL = _prosilica_cpp.FRAME_CONTEXT_SOBEL

def frame_callback(*args):
  return _prosilica_cpp.frame_callback(*args)
frame_callback = _prosilica_cpp.frame_callback
class ProsilicaCamera(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ProsilicaCamera, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ProsilicaCamera, name)
    __repr__ = _swig_repr
    def setAttribute(self, *args): return _prosilica_cpp.ProsilicaCamera_setAttribute(self, *args)
    def getUint32Attribute(self, *args): return _prosilica_cpp.ProsilicaCamera_getUint32Attribute(self, *args)
    def getFloat32Attribute(self, *args): return _prosilica_cpp.ProsilicaCamera_getFloat32Attribute(self, *args)
    def _initFrame(self, *args): return _prosilica_cpp.ProsilicaCamera__initFrame(self, *args)
    def _check(self, *args): return _prosilica_cpp.ProsilicaCamera__check(self, *args)
    def _reportError(self, *args): return _prosilica_cpp.ProsilicaCamera__reportError(self, *args)
    def __init__(self, *args): 
        this = _prosilica_cpp.new_ProsilicaCamera(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _prosilica_cpp.delete_ProsilicaCamera
    __del__ = lambda self : None;
    def startCapture(self): return _prosilica_cpp.ProsilicaCamera_startCapture(self)
    def endCapture(self): return _prosilica_cpp.ProsilicaCamera_endCapture(self)
    def isCapturing(self): return _prosilica_cpp.ProsilicaCamera_isCapturing(self)
    def lockReadyFrames(self): return _prosilica_cpp.ProsilicaCamera_lockReadyFrames(self)
    def unlockReadyFrames(self): return _prosilica_cpp.ProsilicaCamera_unlockReadyFrames(self)
    def waitForReadyFrames(self): return _prosilica_cpp.ProsilicaCamera_waitForReadyFrames(self)
    def broadcastFrameReady(self): return _prosilica_cpp.ProsilicaCamera_broadcastFrameReady(self)
    def getAndLockCurrentFrame(self): return _prosilica_cpp.ProsilicaCamera_getAndLockCurrentFrame(self)
    def releaseCurrentFrame(self): return _prosilica_cpp.ProsilicaCamera_releaseCurrentFrame(self)
    def startContinuousCapture(self): return _prosilica_cpp.ProsilicaCamera_startContinuousCapture(self)
    def queueFrame(self, *args): return _prosilica_cpp.ProsilicaCamera_queueFrame(self, *args)
    def frameCompleted(self, *args): return _prosilica_cpp.ProsilicaCamera_frameCompleted(self, *args)
    def captureOnePvFrame(self): return _prosilica_cpp.ProsilicaCamera_captureOnePvFrame(self)
    __swig_getmethods__["initialize"] = lambda x: _prosilica_cpp.ProsilicaCamera_initialize
    if _newclass:initialize = staticmethod(_prosilica_cpp.ProsilicaCamera_initialize)
    __swig_getmethods__["getNumberOfCameras"] = lambda x: _prosilica_cpp.ProsilicaCamera_getNumberOfCameras
    if _newclass:getNumberOfCameras = staticmethod(_prosilica_cpp.ProsilicaCamera_getNumberOfCameras)
    def getAndLockCurrentFrame_NoGIL(self): return _prosilica_cpp.ProsilicaCamera_getAndLockCurrentFrame_NoGIL(self)
ProsilicaCamera_swigregister = _prosilica_cpp.ProsilicaCamera_swigregister
ProsilicaCamera_swigregister(ProsilicaCamera)

def ProsilicaCamera_initialize():
  return _prosilica_cpp.ProsilicaCamera_initialize()
ProsilicaCamera_initialize = _prosilica_cpp.ProsilicaCamera_initialize

def ProsilicaCamera_getNumberOfCameras():
  return _prosilica_cpp.ProsilicaCamera_getNumberOfCameras()
ProsilicaCamera_getNumberOfCameras = _prosilica_cpp.ProsilicaCamera_getNumberOfCameras


def _frameTo1DArray(*args):
  return _prosilica_cpp._frameTo1DArray(*args)
_frameTo1DArray = _prosilica_cpp._frameTo1DArray

def getCameraList():
  return _prosilica_cpp.getCameraList()
getCameraList = _prosilica_cpp.getCameraList

def test_it(*args):
  return _prosilica_cpp.test_it(*args)
test_it = _prosilica_cpp.test_it

def test_it2():
  return _prosilica_cpp.test_it2()
test_it2 = _prosilica_cpp.test_it2
# This file is compatible with both classic and new-style classes.


